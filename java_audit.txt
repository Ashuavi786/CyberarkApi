



import org.springframework.http.*;
import org.springframework.web.client.RestTemplate;

import java.util.Collections;

public class CCPPasswordFetcher {

    private static final String CCP_API_URL = "https://<ccp-server>/AIMWebService/api/Accounts"; // Replace with CCP API URL
    private static final String APP_ID = "YourAppID"; // Application ID registered in CyberArk
    private static final String SAFE = "YourSafeName"; // Safe name where the password is stored
    private static final String OBJECT = "YourObjectName"; // Object name (e.g., Username or Credential object)
    private static final String REASON = "Reason to fetch"; // Access reason (if required)

    public static void main(String[] args) {
        try {
            String password = fetchPassword();
            System.out.println("Fetched Password: " + password);
        } catch (Exception e) {
            System.err.println("Error occurred while fetching password: " + e.getMessage());
        }
    }

    /**
     * Fetches the password from CyberArk CCP.
     *
     * @return The password as a String.
     */
    public static String fetchPassword() {
        // Create the URL with query parameters
        String requestUrl = String.format("%s?AppID=%s&Safe=%s&Object=%s&reason=%s",
                CCP_API_URL, APP_ID, SAFE, OBJECT, REASON);

        // Initialize RestTemplate
        RestTemplate restTemplate = new RestTemplate();

        // Set HTTP headers
        HttpHeaders headers = new HttpHeaders();
        headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON)); // Expecting JSON response
        headers.set("Authorization", "Bearer <YourAuthToken>"); // Optional: Add Authorization token if required

        // Create HTTP entity with headers
        HttpEntity<String> entity = new HttpEntity<>(headers);

        // Send GET request to the CCP API
        ResponseEntity<String> response = restTemplate.exchange(requestUrl, HttpMethod.GET, entity, String.class);

        // Check response status
        if (response.getStatusCode() == HttpStatus.OK) {
            // Parse and return the password from the response (Assuming response contains "Content")
            String responseBody = response.getBody();
            return parsePasswordFromResponse(responseBody);
        } else {
            throw new RuntimeException("Failed to fetch password. HTTP Status: " + response.getStatusCode());
        }
    }

    /**
     * Parses the password from the API response.
     *
     * @param response The API response in JSON format.
     * @return The password as a String.
     */
    private static String parsePasswordFromResponse(String response) {
        // Assuming the response JSON looks like {"Content":"your_password"}
        // Use a JSON parser to extract the "Content" field
        if (response != null && response.contains("\"Content\":\"")) {
            return response.split("\"Content\":\"")[1].split("\"")[0];
        }
        throw new RuntimeException("Password not found in the response.");
    }
}
